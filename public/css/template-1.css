:root {
	--text-color:  #DEE2E6;
	--space-mediun: 24px;
}

.page {
	background: #FFFFFF;
	padding: 0 15px;
}
.page_content {
	max-width: 960px;
	margin: 0 auto;
}
.header {
	padding: var(--space-medium);
	border-bottom: 1px solid #dee2e6;
}
 .header_logo {
	font-size: 17px;
}
.divider {
	margin: 0;
	height: 1px;
	background: var(--text-color,  #DEE2E6);
}
.nav {
	display: block;
}
.nav_link {
	color: #343A40;
	font-size: 16px;
	text-decoration: none;
}
.nav_link:hover {
	text-decoration: underline;
	color: blue;
	opacity: 50%;
}
.nav_vertical > .nav_link {
	display: block;
}
.nav_inline > .nav_link:not(:last-child) {
	margin-right: var(--space-medium);
}
.nav_vertical > .nav_link:not(:last-child) {
	margin-bottom: 12px;
}
.header_nav_right {
	margin-left: auto;
	width: fit-content;
}
.page_block:not(:last-of-type) {
	margin-bottom: 80px;
}
.footer {
	padding: var(--space-medium) 0;

	border-top: 1px solid var(--text-color,  #DEE2E6);
}
.footer_copyright {
	color: #6C757D;
	font-size: 13px;

	display: block;
	margin-top: 12px;
}
.footer_title {
	color: #212529;
	font-size: 20px;
	font-weight: 500;
	display: block;
	margin-bottom: 12px;
	margin-bottom: 12px;
}
.hero_title {
	color: #212529;
	text-align: center;
	font-size: 56px;
	font-weight: 500;
	margin-bottom: 12px;

	
}
.hero_text {
	color: #212529;
	text-align: center;
	font-size: 20px;
	/* line-height: 150%; */
	max-width: 585px;
	margin: 0 auto;
	line-height: normal;
	display: block;
}
.plans_card:not(:last-of-type) {
	margin-right: 20px;
}
.card-header {
	padding: 12px;
	text-align: center;
	font-size: var(--space-medium);
	color: #212529;
}
.card-body {
	padding: var(--space-medium);
}
/* .card_price {
	text-align: center;
	margin-bottom: var(--space-medium);
} */
.card_price_amount {
	font-size: 40px;
	color: #212529;
}
.card_price_duration {
	color: #6C757D;
	/* text-align: center; */
	font-size: 20px;
	vertical-align: 15px;
}
.card_block {
	text-align: center;
}
.card_block:not(:last-of-type) {
	margin-bottom: var(--space-medium);
	
}
.card_description_item {
	font-size: 16px;
	color: #212529;
	display: block;
	text-align: center;
}
.card_description_item:not(:last-of-type) {
	margin-bottom: 12px;
}
.card-button {
	display: block;
	width: 100%;
	font-size: 19px;
	padding: 9px;
}
.card {

	border: 2px solid blue;
	border-radius: 15px;
	
	
}
.card:hover {

	border: 2px ridge blue;
	outline: 2px solid red;
	outline-offset: 5px;
	/* border-bottom-width: 10px; */
	box-shadow: 5px 5px 10px 2px rgba(43, 7, 206, 0.452);
	/* border-top-right-radius: 10px; */
	/* cursor: not-allowed; */
	opacity: 0.45;
}
.btn {
	border-radius: 25px;
	
}

.btn:hover {
	box-shadow: 5px 5px 10px 2px rgba(43, 7, 206, 0.452);
}
h1 {
	text-shadow: 0px 0px 10px rgba(0, 0, 255, 0.537);
}
/* .plans_card:nth-child(2) > .card {
	visibility: hidden;

} */
/* p {
	background: grey;
	width: 200px;
	height: 100px;
	overflow: scroll;
	text-overflow: ellipsis;
} */
.hero_title {
	
	max-width: 960px;
	margin: 0 auto;
	margin-bottom: 12px;
	height: 65px;
	/* overflow: hidden; */
	text-overflow: ellipsis;
	
	/* white-space: nowrap; */
}
.hero_text {
	/* background: grey;
	text-align: left;
	white-space: break-spaces; */
	/* max-width: 200px;
	width: max-content; */
	/* word-break: break-word; */
	/* hyphens: manual; &shy; */
	/* word-spacing: 10px; */
	overflow: auto;
	resize: both;
}

/* .overflow {
	overflow-wrap: anywhere;
} */
/* .hero_text { */
	/* block-size: 150px;
	writing-mode: horizontal-tb;
	робить текс по горизонталі з (vertical-rl) по вертікалі
	 з (auto) по ширині тексту */

	/* inline-size : 100px;
	встановлює ширину
	блока відповідно до його орієнтації (вертикальна або
	горизонтальна) */

	/* border-block : medium dashed blue;
	встановлює
	вертикальні рамки відповідно до орієнтації тексту
	(вертикальна орієнтація чи горизонтальна)
	W S C W - ширина, S - стиль, C - колір
	W (width) border-block-width
	S (style) border-block-style
	C (color) border-block-color */

	/* border-block-start : medium dashed blue;
	встановлює
	верхню рамку відповідно до орієнтації тексту (вертикальна
	орієнтація чи горизонтальна) */

	/* border-block-end
	встановлює
	нижню рамку відповідно до орієнтації тексту (вертикальна
	орієнтація чи горизонтальна) */

	/* border-block-width
	визначає
	ширину рамки вертикального блоку в залежності від
	значення заданого для неї
	довжина Встановлює ширину рамки у конкретній одиниці
	вимірювання
	thin Встановлює тонку рамку
	medium Встановлює середню рамку
	thick Встановлює товсту рамку */

	/* border-block-style
	встановлення стилю рамки для
	вертикальних сторін елементу
	solid Оформлює рамку суцільною лінією
	dotted Оформлює рамку точковою лінією
	dashed Оформлює рамку пунктирною лінією
	double Оформлює рамку подвійною лінією
	none Встановлює відсутність стилю рамки
	groove Оформлює рамку об'ємною втисненою рамкою
	ridge Оформлює рамку об'ємною опуклою рамкою */

	/* border-block-color
	колір */

	/* border-inline: 2px solid red;
	встановлює
	горизонтальні рамки відповідно до орієнтації тексту
	(вертикальна орієнтація чи горизонтальна)
	W S C W - ширина, S - стиль, C - колір
	W (width) border-inline-width
	S (style) border-inline-style
	C (color) border-inline-color */

	/* border-inline-width: thick;
	визначає
	ширину рамки для горизонтальних сторін елементу */

	/* inset: 20px;
	встановлення відступів від різних сторін відносно
	батьківського елемента або вікна перегляду
	inset-inline зовнішні бокові відступи (зліва та справа), 
				які залежать від орієнтації	тексту
	inset-block зовнішні вертикальні відступи (зверху на знизу), які залежать від
				орієнтації тексту
	padding-block внутрішній відступ вгорі та внизу блоку
	padding-inline внутрішній відступ зліва та справа блоку
	margin-block зовнішній відступ вгорі та внизу блоку
	margin-inline зовнішні відступи зліва та справа блоку */

	/* min-block-size мінімальний розмір висоти блоку відповідно до його
	орієнтації.
	max-block-size максимальний розмір висоти блоку відповідно до його
	орієнтації.
	min-inline-size мінімальний розмір ширини блоку відповідно до його
	орієнтації
	max-inline-size максимальний розмір ширини блоку відповідно до його
	орієнтації */

	/* text-justify: inter-character;
	вирівнювання і вирівнювання пробілів в рядках тексту, коли
	відстань між словами більша за ширину блоку.
	none Тест не вирівнюється
	auto Браузер сам обирає, як вирівнювати текст.
	Значення за замовчуванням
	inter-word Пробіли між словами розширюються, для заповнення ширини блоку
	inter-character Символи розширюються або стискаються, щоб
	заповнити ширину блоку, незалежно від пробілів
	distribute Відстані між символами та словами розподіляються
	рівномірно, щоб заповнити ширину блоку */

	/* text-decoration-skip-ink: auto;
	визначає, як текстове оформлення (наприклад, лінія
	підкреслення) поводить себе навколо символів з високим
	контрастом, таких як літери з "що зависають" елементами,
	які виходять за межі звичайного літерного боксу
	Працює на останніх версіях браузерів окрім IE та мобільної
	Firefox, майже не підтримується властивість “All”
	all Текстове оформлення пропускає пробіли та символи з високим контрастом
	text-decoration-skip: objects;
	декоративні ефекти текстового оформлення (такі як
	підкреслення або лінії над текстом) мають обходити певні
	елементи або дочірні елементи текстового блоку.
	Працює лише у Safari
	objects	Декоративні ефекти текстового оформлення обходять всі
		об'єкти в тексті, такі як вбудовані зображення або мультимедіа
	edges Декоративні ефекти текстового оформлення обходять краї текстового блоку
	spaces Декоративні ефекти текстового оформлення обходять пропуски між словами в тексті
	leading-spaces Декоративні ефекти текстового оформлення обходять
		пропуски перед першим символом тексту
	trailing-spaces Декоративні ефекти текстового оформлення обходять
		пропуски після останнього символу тексту */

		/* Налаштування змінних шрифтів	
	font-variation-settings: "wght" 700;
	контролювати варіації шрифту, такі як нахил, жирність,ширина
	<string> Використовується для вказівки значень варіацій шрифту за їхніми назвами
	<number> Використовується для вказівки числових значень варіацій шрифту
	font-variant-east-asian: traditional;
	контролювати заміну та розмір символів у східноазіатському тексті.
	normal Функції перетворення не використовуються. Значення за замовчуванням.
	jis78 Включає рендеринг форм JIS78
	jis83 Включає рендеринг форм JIS83
	jis90 Включає рендеринг форм JIS90
	jis04 Включає рендеринг форм JIS2004
	simplified Включає рендеринг спрощених форм
	traditional Включає рендеринг традиційних форм
	full-width Включає рендеринг символів однакової ширини квадратної форми
	proportional-width Включає рендеринг символів різної ширини
	ruby Вмикає відображення символів варіантів ruby */

	/* Розрив рядка
	line-break: normal;
	визначає, як браузер повинен розбивати рядки, якщо вони не поміщаються в
	контейнері.
	loose Розбиває текст відповідно до розміру контейнера,
		але відступи між словами будуть пропорційні
	normal Розбиває текст відповідно до розміру контейнера,
		і відступи між словами будуть звичайними, без пропорційного збільшення.
	strict Розбиває текст відповідно до розміру контейнера, і
	відступи між словами будуть збільшені, якщо це
	дозволено за правилами мови, наприклад, у німецькій	мові.
	anywhere Розбиває текст, на рядки у будь-якому місці, де це є
	необхідним, ігноруючи правила перенесення слів та довжину окремих слів.
	text-size-adjust: 120%; 
	використовується для налаштування розміру шрифту
	тексту, коли він відображається на пристроях з високою
	щільністю пікселів (наприклад, на деяких мобільних
	пристроях).	Не підтримується у Safari, Firefox

	text-decoration-thickness: auto;
	визначає товщину лінії, що використовується для
	оформлення тексту, такого як підкреслення, мереживо або
	перекреслення.Не працює на Safari, Сhrome, мобільній Firefox

	text-combine-upright: digits;
	використовується для встановлення відображення горизонтального азійського тексту в комбінованому стилі
	Не працює в Edge, старших версіях Google Chrome, Opera, і
	тільки частково підтримується в IE та старших версіях Safari
	font-language-override: "ukr";
	використовується для перезапису мови, встановленої в налаштуваннях браузера, для визначення мови
	відображення тексту. Працює тільки в Firefox
	text-underline-position: left;
	використовується для налаштування позиції підкреслення
	тексту.	Більшість властивостей підтримується тільки Firefox
	auto Встановлює автоматичну позицію підкреслення тексту
	under Встановлює позицію підкреслення тексту внизу від базової лінії тексту
	left Встановлює позицію підкреслення тексту зліва від базової лінії тексту
	right Встановлює позицію підкреслення тексту справа від	базової лінії тексту
	under left Встановлює позицію підкреслення тексту внизу від	базової лінії тексту та зліва від тексту
	under right Встановлює позицію підкреслення тексту внизу від базової лінії тексту та справа від тексту
	font-size-adjust: 0.5;
	використовується для встановлення налаштувань розміру шрифту для відображення на різних системах, залежно від
	наявності альтернативних шрифтів з різними висотами літер
	Працює тільки в останніх версіях Firefox та Safari
	hanging-punctuation: first;
	використовується для визначення розміщення лапок,
	апострофів та інших висячих знаків в тексті.
	Працює тільки в Safari
	first Лапки та висячі знаки розміщуються на початку першого
	рядка тексту, що допомагає забезпечити вирівнювання
	лівого краю тексту з рештою тексту.
	last Лапки та висячі знаки розміщуються на кінці останнього
	рядка тексту, що допомагає забезпечити вирівнювання
	правого краю тексту з рештою тексту.
	force-end Лапки та висячі знаки завжди розміщуються на кінці
	останнього рядка, навіть якщо це порушує вирівнювання
	правого краю тексту
	allow-end Лапки та висячі знаки можуть розміщуватися на початку
	першого рядка або на кінці останнього рядка, якщо вона
	іншим чином не підходить до вирівнювання.

	text-indent: 30px;
	встановлення відступу першого рядка текстового блоку від лівого краю.
	Майже не мають підтримки

	text-underline-offset: 2px;
	відстань між текстом та підкресленням (або іншим стилізованим оформленням) тексту, якщо на текстовий
	елемент застосовано оформлення "підкреслення".
	Працює тільки у Firefox */
/* } */
body {
	/* background-image: url('/img/test.png');
	background-repeat: round; */
	background: radial-gradient(50% 50.00% at 50% 50.00%,
	 rgba(59, 20, 212, 0.51) 0%,
	 rgba(245, 245, 245, 0.00) 100%);
}
.page {
 background-color: transparent;
 /* background-color: rgba(255, 255, 255, 0.685); */
 /* background-image: url('/img/test2.jpg');
 background-repeat: no-repeat;
 background-position: center;
 background-attachment: fixed;
 background-size: cover; */
}
.header {
	background-image: url('/img/test.gif');
}
.hero_text {
	/* background-image: url('/img/test2.jpg'); */
	/* фіксує картинку на фоні а сам контент може рухатись */
	/* background-attachment: fixed; */
	/* фіксує фон разом з контентом */
	/* background-attachment: local; */
	/* якщо додати то прокручюється скролом контент разом з картинкою */
	/* height: 70px;
	overflow: auto; */
	/* прозорий фон */
	/* background-color: transparent;
	background-image: url('/img/test2.jpg');
	border: 10px solid transparent; */
	/* padding: 40px;
	color: aquamarine;
	border-image-source: url('/img/test2.jpg');
	border-image-width: 10%;
	border-image-slice: 10% 15%;
	border-image-repeat: space; */
	/* виносе рамку ззовні рамки
	border-image-outset: 40px; */

	/* background-origin: border-box;
	background-color: transparent; */
	/* текст в цвете фона картинки */
	background-image: url();
	color: transparent;
	background-clip: text;
	-webkit-background-clip: text;
}
/* .card_block {
	/* list-style-type: upper-alpha; */
	/* list-style-position: outside; */
	/* padding: 0; */
	/* list-style-image: url(/svg/slack.svg); */
	/* list-style-image: linear-gradient(to bottom right, blue, red); */
 */
/* .card_description_item {
	display: list-item;
} */
.table tr {
	border: 1px solid #6C757D;
}
.table tr td {
	border: 1px solid #3b6386;
	border-bottom-color: red;
	border-right-color: blue;

}
.table {
	table-layout: fixed;
	/* border-collapse: collapse; */
	border-collapse: unset;
	border-spacing: 10px;
	caption-side: top;
	empty-cells: hide;
	width: 600px;
}
.nav_link::before,
.nav_link::after {
	content: "";
	display: inline-block;
	width: 10px;
	height: 10px;
	background-image: url('/img/test2.jpg');
}
.nav_link::before {
	margin-right: 15px;
}
.nav_link::after {
	margin-left: 15px;
}
.calc {
	width: 600px;
	margin-left: calc(50% - (600px / 2));
}
